{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/ourListItems.js","webpack:///./js/ourList.js","webpack:///./js/gallery.js","webpack:///../node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///../node_modules/dom7/dist/dom7.modular.js","webpack:///../node_modules/swiper/js/swiper.esm.bundle.js","webpack:///./js/slider.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ourListItems","title","image","text","list","document","querySelector","content","itemElements","Array","from","querySelectorAll","createContent","_ref","concat","addEventListener","_ref2","target","currentTarget","innerHTML","map","el","classList","remove","add","article","itemsArr","find","textContent","markup","insertAdjacentHTML","_ref3","selectList","items","galleryList","section","button","photosToLoad","photos","slice","createItem","createMarkup","articles","join","selected","filter","type","e","doc","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","push","match","split","nodeType","unique","uniqueArray","fn","Class","Methods","addClass","className","classes","j","removeClass","hasClass","contains","toggleClass","toggle","attr","attrs","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","foundElements","found","matchedItems","removeChild","toAdd","keys","forEach","methodName","Utils","obj","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","a","replace","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","extend","swiper_esm_bundle_Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","isArray","instanceParams","instance","moduleName","modulesParams","moduleParams","modulePropName","moduleProp","moduleEventName","components","use","proto","static","install","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","visibleSlides","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideProgress","minTranslate","autoHeight","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","swiper_esm_bundle_transition","transitionStart","direction","dir","swiper_esm_bundle_slide","slideTo","initialSlide","allowSlideNext","allowSlidePrev","scrollWidth","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenWidth","screenHeight","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","dummyEventAttached","dummyEventListener","defaults","init","touchEventsTarget","updateOnWindowResize","edgeSwipeDetection","edgeSwipeThreshold","freeMode","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","which","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","moveDistance","currentSlideSize","stopIndex","groupSize","ratio","navigation","nextEl","prevEl","onScroll","onClick","stopImmediatePropagation","start","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","minRatio","substr","innerHeight","sort","b","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","swiper_esm_bundle_Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","eventsTarged","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","raw","animateSlider","releaseScroll","getTime","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","slideSelector","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","controller","spline","controlled","control","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","autoScrollOffset","useOffset","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","hideOnClick","isHidden","number","render","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","visibilityState","onVisibilityChange","swiper_esm_bundle","galleryTop","Swiper","galleryThumbs"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export default [\n  {\n    title: \"Web Design\",\n    image: \"https://picsum.photos/id/1003/200/140.jpg\",\n    text:\n      \"Хоча, така інкапсуляція є бажаною для компонентів, які описують певну закінчену частину додатка, наприклад, FeedStory або Comment, це може бути незручним для часто перевикористовуваних “дрібних” компонентів, таких як FancyButton та MyTextInput. Ці компоненти використовуються в додатку подібно до звичайних DOM button чи input і доступ до їхніх DOM-вузлів може бути необхідним для управління фокусом, виділенням або анімацією. Таким чином, компоненти, що використовують FancyButton можуть отримати реф внутрішнього DOM-вузла button і якщо потрібно, мати доступ до DOM button подібно до того, якби він використовувався напряму.\",\n  },\n  {\n    title: \"Graphic Design\",\n    image: \"https://picsum.photos/id/1002/200/140.jpg\",\n    text:\n      \"Ми довго обговорювали це рішення і, судячи з нашого досвіду, гірше було б залишити пошкоджений UI на місці, ніж повністю його вилучити. Наприклад, в такому продукті як чат (Facebook Messenger), відображення пошкодженого UI може призвести до того, що хтось надіслав би повідомлення не тій людині. Аналогічно, ще гірше у додатку з проведення платежів відобразити невірну суму, ніж не відобразити взагалі нічого.\",\n  },\n  {\n    title: \"Online Support\",\n    image: \"https://picsum.photos/id/1001/200/140.jpg\",\n    text:\n      \"Вирішуйте на ваш розсуд, як часто ставити запобіжники. Було б доцільно обгорнути компоненти маршрутів найвищого рівня, щоб показати користувачеві повідомлення «Щось пішло не так», так само, як це часто робиться в фреймворках на стороні сервера. Ви також можете обгорнути в запобіжник окремі віджети, щоб захистити решту додатку від збоїв в них. Таким чином, компоненти, що використовують FancyButton можуть отримати реф внутрішнього DOM-вузла button і якщо потрібно, мати доступ до DOM button подібно до того, якби він використовувався напряму.\",\n  },\n  {\n    title: \"App Design\",\n    image: \"https://picsum.photos/id/1000/200/140.jpg\",\n    text:\n      \"Створюйте інкапсульовані компоненти, які керують власним станом, а з них будуйте складні інтерфейси. Оскільки логіка компонентів написана на JavaScript, замість шаблонів, ви з легкістю можете передавати складні дані у вашому додатку і зберігати стан окремо від DOM. Таким чином, компоненти, що використовують FancyButton можуть отримати реф внутрішнього DOM-вузла button і якщо потрібно, мати доступ до DOM button подібно до того, якби він використовувався напряму.\",\n  },\n  {\n    title: \"Online Marketing\",\n    image: \"https://picsum.photos/id/999/200/140.jpg\",\n    text:\n      \"React спрощує створення інтерактивних інтерфейсів. Вам потрібно лише описати, як різні частини інтерфейсу виглядають у кожному стані вашого додатку і React ефективно оновить та відрендерить лише потрібні компоненти, коли ваші дані зміняться. Декларативні інтерфейси роблять ваш код більш передбачуваним і його набагато легше налагоджувати. Таким чином, компоненти, що використовують FancyButton можуть отримати реф внутрішнього DOM-вузла button і якщо потрібно, мати доступ до DOM button подібно до того, якби він використовувався напряму.\",\n  },\n  {\n    title: \"Seo Service\",\n    image: \"https://picsum.photos/id/998/200/140.jpg\",\n    text:\n      \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Deserunt mollit anim id est laborum. Lorem ipsum dolor sit amet, consectetur adip isicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\",\n  },\n];\n","const list = document.querySelector(\".ourServices__list\");\nconst content = document.querySelector(\".ourServices__content\");\nconst itemElements = Array.from(\n  document.querySelectorAll(\".ourServices__item\")\n);\nimport itemsArr from \"./ourListItems\";\n\nconst createContent = ({ image, text }) => {\n  return `\n            <img class=\"ourServices__img\" src=\"${image}\">\n            <p class=\"ourServices__text\">${text}</p>\n          `;\n};\n\nconst onCreateContent = ({ target, currentTarget }) => {\n  if (target === currentTarget) return;\n  content.innerHTML = \"\";\n  itemElements.map((el) => el.classList.remove(\"active\"));\n  target.classList.add(\"active\");\n  const article = itemsArr.find((el) => el.title === target.textContent);\n  if (article) {\n    const markup = createContent(article);\n    content.insertAdjacentHTML(\"afterbegin\", markup);\n  }\n};\n\nconst onCreateContentAfterLoaded = ({ target }) => {\n  const markup = createContent(itemsArr[0]);\n  content.insertAdjacentHTML(\"afterbegin\", markup);\n  itemElements[0].classList.add(\"active\");\n};\n\nlist.addEventListener(\"click\", onCreateContent);\ndocument.addEventListener(\"DOMContentLoaded\", onCreateContentAfterLoaded);\n","import photos from \"./gallery.json\";\r\nconst selectList = document.querySelector(\".amazing-section__list\");\r\nconst items = Array.from(document.querySelectorAll(\".amazing-section__item\"));\r\nconst galleryList = document.querySelector(\".amazing-section__gallery\");\r\nconst section = document.querySelector(\".amazing-section\");\r\nconst button = document.querySelector(\".amazing-section__button\");\r\n\r\nconst photosToLoad = photos.slice(30, 42);\r\n\r\nconst createItem = ({ image }) => {\r\n  return `<li class=\"amazing-section__article\"><img class=\"amazing-section__photo\" src=\"${image}\" alt=\"\"></li>`;\r\n};\r\n\r\nconst createMarkup = (articles, target) => {\r\n  galleryList.innerHTML = \"\";\r\n  section.classList.remove(\"amazing-section--midified\");\r\n  button.classList.remove(\"hidden\");\r\n  const markup = articles.map((el) => createItem(el)).join(\"\");\r\n  galleryList.insertAdjacentHTML(\"afterbegin\", markup);\r\n  items.map((el) => el.classList.remove(\"activeSection\"));\r\n  if (!target) return;\r\n  target.classList.add(\"activeSection\");\r\n};\r\n\r\nconst onSelectSection = ({ target, currentTarget }) => {\r\n  if (target === currentTarget) return;\r\n  if (target.textContent === \"All\") {\r\n    createMarkup(photosToLoad, target);\r\n    return;\r\n  }\r\n  const selected = photos.filter((el) => el.type === target.textContent);\r\n  createMarkup(selected, target);\r\n};\r\n\r\nconst onload = (e) => {\r\n  createMarkup(photosToLoad);\r\n  items[0].classList.add(\"activeSection\");\r\n};\r\n\r\nconst onLoadMore = ({ target }) => {\r\n  const markup = photos\r\n    .slice(26, 38)\r\n    .map((el) => createItem(el))\r\n    .join(\"\");\r\n  galleryList.insertAdjacentHTML(\"beforeend\", markup);\r\n  section.classList.add(\"amazing-section--midified\");\r\n  button.classList.add(\"hidden\");\r\n};\r\n\r\nselectList.addEventListener(\"click\", onSelectSection);\r\ndocument.addEventListener(\"DOMContentLoaded\", onload);\r\nbutton.addEventListener(\"click\", onLoadMore);\r\n","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 5.3.8\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 24, 2020\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      swiper.visibleSlides.each((index, slide) => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) break;\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    let t = -translate;\n    if (rtl) {\n      t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n    }\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: t,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\n    const increment = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl, rtlTranslate } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    if (rtlTranslate) {\n      swiper.translate = ((wrapperEl.scrollWidth - wrapperEl.offsetWidth) - wrapperEl.scrollLeft);\n    } else {\n      swiper.translate = -wrapperEl.scrollLeft;\n    }\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video, label',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = ((parseFloat(params.stretch) / 100) * slideSize);\n      }\n      let translateY = isHorizontal ? 0 : stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0)\n          .index();\n        const nextThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0)\n          .index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n//# sourceMappingURL=swiper.esm.bundle.js.map\n","import Swiper from \"swiper\";\r\n\r\nvar galleryTop = new Swiper(\".gallery-top\", {\r\n  spaceBetween: 10,\r\n  navigation: {\r\n    nextEl: \".swiper-button-next\",\r\n    prevEl: \".swiper-button-prev\",\r\n  },\r\n  loop: true,\r\n  loopedSlides: 4,\r\n});\r\nvar galleryThumbs = new Swiper(\".gallery-thumbs\", {\r\n  spaceBetween: 22,\r\n  centeredSlides: true,\r\n  slidesPerView: \"auto\",\r\n  touchRatio: 0.2,\r\n  slideToClickedSlide: true,\r\n  loop: true,\r\n  loopedSlides: 4,\r\n});\r\ngalleryTop.controller.control = galleryThumbs;\r\ngalleryThumbs.controller.control = galleryTop;\r\n"],"sourceRoot":""}